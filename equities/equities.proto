syntax = "proto3";

package equities;

import "google/protobuf/timestamp.proto";
import "google/rpc/status.proto";

import  "orders.proto";
 
option go_package = "github.com/dhananjayksharma/dkgosql-grpc-equities;equities";
 
// The order service definition.
service Order {
    // Sends a order
    rpc ProcessOrder (stream OrderRequest) returns (stream StreamingOrderResponse) {}
    rpc GetOrderListByUserID (stream OrderListRequest) returns (stream OrderListResponse) {}
  }

message OrderListRequest{
  string userid = 1;
}
message OrderListResponse{
  string userid = 1;
  string orderid = 2;
  int32 status = 3;
}


message OrderRequest {
    string userid = 1;
    string orderid = 2; 
    int64 quantity = 3;
    int64 companyid = 4;
    int64 allowedqty = 5;
    OrderType ordertype = 6;
  }

  message StreamingOrderResponse{
    oneof message{
      OrderResponse orderresponse =1;
      google.rpc.Status error = 2;
    }
  }

  message OrderResponse {
    string userid = 1;
    string orderid = 2;
    bool status = 3;
    int64 quantity = 4;
    int64 processed_quantity = 5;
    int64 not_processed_quantity = 6;
    string newupdateddt = 7; 
    google.protobuf.Timestamp orderprocessedupdatedt = 8;
  }
